spring.application.name=bespoke
#jpa setting
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.config.import=optional:file:.env

#db setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=${DBURL}
spring.datasource.username=${DBID}
spring.datasource.password=${DBPW}

#view
spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp

# s3 bucket
aws.s3.endpoint=${S3Endpoint}
aws.s3.region=${S3Region}
aws.s3.access-key=${S3Accesskey}
aws.s3.secret-key=${S3Secretkey}

# Elasticsearch 서버 주소 설정
spring.data.elasticsearch.cluster-nodes=medxwzhbga.a.pinggy.link:443
# Elasticsearch 인덱스명 설정
spring.data.elasticsearch.repositories.enabled=true
spring.data.elasticsearch.index.name=result_bulk

# Elasticsearch 연결 설정
spring.elasticsearch.rest.uris=https://medxwzhbga.a.pinggy.link
spring.elasticsearch.rest.username=${ElasticID}
spring.elasticsearch.rest.password=${ElasticPW}

spring.jwt.secret=${springJwtSecret}
logging.level.org.springframework.web: DEBUG


# File
## 파일 업로드 기능
spring.servlet.multipart.enabled=true
# 파일 업로드 위치 - /upload/ 디렉토리의 저장소 경로 사용
#upload.path="C:/ITStudy/BespokeCreditCard/BespokeCreditCard/bespoke/src/main/resource/static/img"
#upload.path="C:/ITStudy/Final_Project/final_project/board/src/main/webapp/upload"

# DALL-E API key
openai.key=${DALLE}

# DeepL API key
deepl.key=${DEEPL}

# static 기본 경로 지정
#spring.mvc.static-path-pattern=/resources/static/**
